//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/t4models).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

using ModeloDB;

namespace ModeloDB
{
	/// <summary>
	/// Database       : isp
	/// Data Source    : localhost
	/// Server Version : 9.2.4
	/// </summary>
	public partial class ispDB : LinqToDB.Data.DataConnection
	{
		public ITable<actividadeconomica>       actividadeseconomicas     { get { return this.GetTable<actividadeconomica>(); } }
		public ITable<alineacion>               alineaciones              { get { return this.GetTable<alineacion>(); } }
		public ITable<auditoriasmodulo>         auditoriasmodulos         { get { return this.GetTable<auditoriasmodulo>(); } }
		public ITable<banco>                    bancos                    { get { return this.GetTable<banco>(); } }
		public ITable<barrio>                   barrios                   { get { return this.GetTable<barrio>(); } }
		public ITable<bodega>                   bodegas                   { get { return this.GetTable<bodega>(); } }
		public ITable<canton>                   cantones                  { get { return this.GetTable<canton>(); } }
		public ITable<cliente>                  clientes                  { get { return this.GetTable<cliente>(); } }
		public ITable<columnasgrid>             columnasgrids             { get { return this.GetTable<columnasgrid>(); } }
		public ITable<contable>                 contables                 { get { return this.GetTable<contable>(); } }
		public ITable<contrato>                 contratos                 { get { return this.GetTable<contrato>(); } }
		public ITable<contribuyente>            contribuyentes            { get { return this.GetTable<contribuyente>(); } }
		public ITable<conveniopago>             conveniospagos            { get { return this.GetTable<conveniopago>(); } }
		public ITable<cuentabanco>              cuentasbancos             { get { return this.GetTable<cuentabanco>(); } }
		public ITable<cuentacontable>           cuentascontables          { get { return this.GetTable<cuentacontable>(); } }
		public ITable<detallecontable>          detallescontables         { get { return this.GetTable<detallecontable>(); } }
		public ITable<detalleordenpedido>       detallesordenespedidos    { get { return this.GetTable<detalleordenpedido>(); } }
		public ITable<detalleordenservicio>     detallesordenesservicios  { get { return this.GetTable<detalleordenservicio>(); } }
		public ITable<detallesauditoriasmodulo> detallesauditoriasmodulos { get { return this.GetTable<detallesauditoriasmodulo>(); } }
		public ITable<detallesinventario>       detallesinventarios       { get { return this.GetTable<detallesinventario>(); } }
		public ITable<detalleventa>             detallesventas            { get { return this.GetTable<detalleventa>(); } }
		public ITable<documento>                documentos                { get { return this.GetTable<documento>(); } }
		public ITable<empresa>                  empresas                  { get { return this.GetTable<empresa>(); } }
		public ITable<estadocivil>              estadosciviles            { get { return this.GetTable<estadocivil>(); } }
		public ITable<estadoordenpedido>        estadosordenespedidos     { get { return this.GetTable<estadoordenpedido>(); } }
		public ITable<estadopersona>            estadospersonas           { get { return this.GetTable<estadopersona>(); } }
		public ITable<estadosfactura>           estadosfacturas           { get { return this.GetTable<estadosfactura>(); } }
		public ITable<formapago>                formaspagos               { get { return this.GetTable<formapago>(); } }
		public ITable<fraccionperiodo>          fraccionesperiodos        { get { return this.GetTable<fraccionperiodo>(); } }
		public ITable<genero>                   generos                   { get { return this.GetTable<genero>(); } }
		public ITable<identificadorpago>        identificadorespagos      { get { return this.GetTable<identificadorpago>(); } }
		public ITable<imagenespersona>          imagenespersonas          { get { return this.GetTable<imagenespersona>(); } }
		public ITable<inventario>               inventarios               { get { return this.GetTable<inventario>(); } }
		public ITable<iteminventario>           itemsinventarios          { get { return this.GetTable<iteminventario>(); } }
		public ITable<marca>                    marcas                    { get { return this.GetTable<marca>(); } }
		public ITable<menu>                     menus                     { get { return this.GetTable<menu>(); } }
		public ITable<operadoratelefonia>       operadorastelefonias      { get { return this.GetTable<operadoratelefonia>(); } }
		public ITable<ordenpedido>              ordenespedidos            { get { return this.GetTable<ordenpedido>(); } }
		public ITable<ordenservicio>            ordenesservicios          { get { return this.GetTable<ordenservicio>(); } }
		public ITable<pago>                     pagos                     { get { return this.GetTable<pago>(); } }
		public ITable<parametrogeneral>         parametrosgenerales       { get { return this.GetTable<parametrogeneral>(); } }
		public ITable<parroquia>                parroquias                { get { return this.GetTable<parroquia>(); } }
		public ITable<perfil>                   perfiles                  { get { return this.GetTable<perfil>(); } }
		public ITable<perfilmenu>               perfilesmenus             { get { return this.GetTable<perfilmenu>(); } }
		public ITable<periodo>                  periodos                  { get { return this.GetTable<periodo>(); } }
		public ITable<persona>                  personas                  { get { return this.GetTable<persona>(); } }
		public ITable<plan>                     planes                    { get { return this.GetTable<plan>(); } }
		public ITable<producto>                 productos                 { get { return this.GetTable<producto>(); } }
		public ITable<profesion>                profesiones               { get { return this.GetTable<profesion>(); } }
		public ITable<provincia>                provincias                { get { return this.GetTable<provincia>(); } }
		public ITable<sectoreconomico>          sectoreseconomicos        { get { return this.GetTable<sectoreconomico>(); } }
		public ITable<statbase>                 statbases                 { get { return this.GetTable<statbase>(); } }
		public ITable<sucursal>                 sucursales                { get { return this.GetTable<sucursal>(); } }
		public ITable<tarjetacredito>           tarjetascreditos          { get { return this.GetTable<tarjetacredito>(); } }
		public ITable<telefonosucursal>         telefonossucursales       { get { return this.GetTable<telefonosucursal>(); } }
		public ITable<tipocolumna>              tiposcolumnas             { get { return this.GetTable<tipocolumna>(); } }
		public ITable<tipocontable>             tiposcontables            { get { return this.GetTable<tipocontable>(); } }
		public ITable<tipodocumento>            tiposdocumentos           { get { return this.GetTable<tipodocumento>(); } }
		public ITable<tipopersona>              tipospersonas             { get { return this.GetTable<tipopersona>(); } }
		public ITable<tipoplan>                 tiposplanes               { get { return this.GetTable<tipoplan>(); } }
		public ITable<tiposervicio>             tiposservicios            { get { return this.GetTable<tiposervicio>(); } }
		public ITable<tiposimagene>             tiposimagenes             { get { return this.GetTable<tiposimagene>(); } }
		public ITable<unidaddemedida>           unidadesdemedidas         { get { return this.GetTable<unidaddemedida>(); } }
		public ITable<uso_base>                 uso_base                  { get { return this.GetTable<uso_base>(); } }
		public ITable<usuario>                  usuarios                  { get { return this.GetTable<usuario>(); } }
		public ITable<usuarioperfil>            usuariosperfiles          { get { return this.GetTable<usuarioperfil>(); } }
		public ITable<usuariosesionactiva>      usuariossesionactivas     { get { return this.GetTable<usuariosesionactiva>(); } }
		public ITable<venta>                    ventas                    { get { return this.GetTable<venta>(); } }
	}

	public static partial class tableExtensions
	{
		public static actividadeconomica Find(this ITable<actividadeconomica> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static alineacion Find(this ITable<alineacion> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static auditoriasmodulo Find(this ITable<auditoriasmodulo> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static banco Find(this ITable<banco> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static barrio Find(this ITable<barrio> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static bodega Find(this ITable<bodega> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static canton Find(this ITable<canton> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static cliente Find(this ITable<cliente> table, int idpersona)
		{
			return table.FirstOrDefault(t =>
				t.idpersona == idpersona);
		}

		public static columnasgrid Find(this ITable<columnasgrid> table, int idmenu)
		{
			return table.FirstOrDefault(t =>
				t.idmenu == idmenu);
		}

		public static contable Find(this ITable<contable> table, int idperiodo)
		{
			return table.FirstOrDefault(t =>
				t.idperiodo == idperiodo);
		}

		public static contrato Find(this ITable<contrato> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static contribuyente Find(this ITable<contribuyente> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static conveniopago Find(this ITable<conveniopago> table, int identificadorpagos)
		{
			return table.FirstOrDefault(t =>
				t.identificadorpagos == identificadorpagos);
		}

		public static cuentabanco Find(this ITable<cuentabanco> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static cuentacontable Find(this ITable<cuentacontable> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static detallecontable Find(this ITable<detallecontable> table, short idperiodo)
		{
			return table.FirstOrDefault(t =>
				t.idperiodo == idperiodo);
		}

		public static detalleordenpedido Find(this ITable<detalleordenpedido> table, int idordenpedido)
		{
			return table.FirstOrDefault(t =>
				t.idordenpedido == idordenpedido);
		}

		public static detalleordenservicio Find(this ITable<detalleordenservicio> table, int idordenservicio)
		{
			return table.FirstOrDefault(t =>
				t.idordenservicio == idordenservicio);
		}

		public static detallesauditoriasmodulo Find(this ITable<detallesauditoriasmodulo> table, int idauditoria)
		{
			return table.FirstOrDefault(t =>
				t.idauditoria == idauditoria);
		}

		public static detallesinventario Find(this ITable<detallesinventario> table, int idperiodo)
		{
			return table.FirstOrDefault(t =>
				t.idperiodo == idperiodo);
		}

		public static detalleventa Find(this ITable<detalleventa> table, int idventa)
		{
			return table.FirstOrDefault(t =>
				t.idventa == idventa);
		}

		public static documento Find(this ITable<documento> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static empresa Find(this ITable<empresa> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static estadocivil Find(this ITable<estadocivil> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static estadoordenpedido Find(this ITable<estadoordenpedido> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static estadopersona Find(this ITable<estadopersona> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static estadosfactura Find(this ITable<estadosfactura> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static formapago Find(this ITable<formapago> table, string id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static fraccionperiodo Find(this ITable<fraccionperiodo> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static genero Find(this ITable<genero> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static identificadorpago Find(this ITable<identificadorpago> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static imagenespersona Find(this ITable<imagenespersona> table, short idtipoimagen)
		{
			return table.FirstOrDefault(t =>
				t.idtipoimagen == idtipoimagen);
		}

		public static inventario Find(this ITable<inventario> table, int idperiodo)
		{
			return table.FirstOrDefault(t =>
				t.idperiodo == idperiodo);
		}

		public static iteminventario Find(this ITable<iteminventario> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static marca Find(this ITable<marca> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static menu Find(this ITable<menu> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static operadoratelefonia Find(this ITable<operadoratelefonia> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static ordenpedido Find(this ITable<ordenpedido> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static ordenservicio Find(this ITable<ordenservicio> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static pago Find(this ITable<pago> table, int identificadorpagos)
		{
			return table.FirstOrDefault(t =>
				t.identificadorpagos == identificadorpagos);
		}

		public static parametrogeneral Find(this ITable<parametrogeneral> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static parroquia Find(this ITable<parroquia> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static perfil Find(this ITable<perfil> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static perfilmenu Find(this ITable<perfilmenu> table, short idperfil)
		{
			return table.FirstOrDefault(t =>
				t.idperfil == idperfil);
		}

		public static periodo Find(this ITable<periodo> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static persona Find(this ITable<persona> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static plan Find(this ITable<plan> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static producto Find(this ITable<producto> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static profesion Find(this ITable<profesion> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static provincia Find(this ITable<provincia> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static sectoreconomico Find(this ITable<sectoreconomico> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static sucursal Find(this ITable<sucursal> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static tarjetacredito Find(this ITable<tarjetacredito> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static telefonosucursal Find(this ITable<telefonosucursal> table, int idsucursal)
		{
			return table.FirstOrDefault(t =>
				t.idsucursal == idsucursal);
		}

		public static tipocolumna Find(this ITable<tipocolumna> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static tipocontable Find(this ITable<tipocontable> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static tipodocumento Find(this ITable<tipodocumento> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static tipopersona Find(this ITable<tipopersona> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static tipoplan Find(this ITable<tipoplan> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static tiposervicio Find(this ITable<tiposervicio> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static tiposimagene Find(this ITable<tiposimagene> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static unidaddemedida Find(this ITable<unidaddemedida> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static usuario Find(this ITable<usuario> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static usuarioperfil Find(this ITable<usuarioperfil> table, int idusuario)
		{
			return table.FirstOrDefault(t =>
				t.idusuario == idusuario);
		}

		public static usuariosesionactiva Find(this ITable<usuariosesionactiva> table, int idusuario)
		{
			return table.FirstOrDefault(t =>
				t.idusuario == idusuario);
		}

		public static venta Find(this ITable<venta> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}
	}
}