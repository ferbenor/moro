//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/t4models).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace Modelo
{
	/// <summary>
	/// Database       : isp
	/// Data Source    : localhost
	/// Server Version : 9.2.4
	/// </summary>
	public partial class ispDB : LinqToDB.Data.DataConnection, IDisposable
	{
		public ITable<actividadeconomica>    actividadeseconomicas    { get { return this.GetTable<actividadeconomica>(); } }
		public ITable<banco>                 bancos                   { get { return this.GetTable<banco>(); } }
		public ITable<barrio>                barrios                  { get { return this.GetTable<barrio>(); } }
		public ITable<canton>                cantones                 { get { return this.GetTable<canton>(); } }
		public ITable<cliente>               clientes                 { get { return this.GetTable<cliente>(); } }
		public ITable<contable>              contables                { get { return this.GetTable<contable>(); } }
		public ITable<contrato>              contratos                { get { return this.GetTable<contrato>(); } }
		public ITable<contribuyente>         contribuyentes           { get { return this.GetTable<contribuyente>(); } }
		public ITable<conveniopago>          conveniospagos           { get { return this.GetTable<conveniopago>(); } }
		public ITable<cuentabanco>           cuentasbancos            { get { return this.GetTable<cuentabanco>(); } }
		public ITable<cuentacontable>        cuentascontables         { get { return this.GetTable<cuentacontable>(); } }
		public ITable<detallecontable>       detallescontables        { get { return this.GetTable<detallecontable>(); } }
		public ITable<detalleordenservicio>  detallesordenesservicios { get { return this.GetTable<detalleordenservicio>(); } }
		public ITable<detallesordenespedido> detallesordenespedidos   { get { return this.GetTable<detallesordenespedido>(); } }
		public ITable<documento>             documentos               { get { return this.GetTable<documento>(); } }
		public ITable<estadocivil>           estadosciviles           { get { return this.GetTable<estadocivil>(); } }
		public ITable<estadoordenpedido>     estadosordenespedidos    { get { return this.GetTable<estadoordenpedido>(); } }
		public ITable<estadopersona>         estadospersonas          { get { return this.GetTable<estadopersona>(); } }
		public ITable<formapago>             formaspagos              { get { return this.GetTable<formapago>(); } }
		public ITable<genero>                generos                  { get { return this.GetTable<genero>(); } }
		public ITable<identificadorpago>     identificadorespagos     { get { return this.GetTable<identificadorpago>(); } }
		public ITable<iteminventario>        itemsinventarios         { get { return this.GetTable<iteminventario>(); } }
		public ITable<menu>                  menus                    { get { return this.GetTable<menu>(); } }
		public ITable<operadoratelefonia>    operadorastelefonias     { get { return this.GetTable<operadoratelefonia>(); } }
		public ITable<ordenpedido>           ordenespedidos           { get { return this.GetTable<ordenpedido>(); } }
		public ITable<ordenservicio>         ordenesservicios         { get { return this.GetTable<ordenservicio>(); } }
		public ITable<pago>                  pagos                    { get { return this.GetTable<pago>(); } }
		public ITable<parametrogeneral>      parametrosgenerales      { get { return this.GetTable<parametrogeneral>(); } }
		public ITable<parroquia>             parroquias               { get { return this.GetTable<parroquia>(); } }
		public ITable<perfil>                perfiles                 { get { return this.GetTable<perfil>(); } }
		public ITable<perfilmenu>            perfilesmenus            { get { return this.GetTable<perfilmenu>(); } }
		public ITable<periodo>               periodos                 { get { return this.GetTable<periodo>(); } }
		public ITable<persona>               personas                 { get { return this.GetTable<persona>(); } }
		public ITable<plan>                  planes                   { get { return this.GetTable<plan>(); } }
		public ITable<producto>              productos                { get { return this.GetTable<producto>(); } }
		public ITable<profesion>             profesiones              { get { return this.GetTable<profesion>(); } }
		public ITable<provincia>             provincias               { get { return this.GetTable<provincia>(); } }
		public ITable<sectoreconomico>       sectoreseconomicos       { get { return this.GetTable<sectoreconomico>(); } }
		public ITable<statbase>              statbases                { get { return this.GetTable<statbase>(); } }
		public ITable<tipocontable>          tiposcontables           { get { return this.GetTable<tipocontable>(); } }
		public ITable<tipodocumento>         tiposdocumentos          { get { return this.GetTable<tipodocumento>(); } }
		public ITable<tipopersona>           tipospersonas            { get { return this.GetTable<tipopersona>(); } }
		public ITable<tipoplan>              tiposplanes              { get { return this.GetTable<tipoplan>(); } }
		public ITable<tiposervicio>          tiposservicios           { get { return this.GetTable<tiposervicio>(); } }
		public ITable<unidaddemedida>        unidadesdemedidas        { get { return this.GetTable<unidaddemedida>(); } }
		public ITable<uso_base>              uso_base                 { get { return this.GetTable<uso_base>(); } }
		public ITable<usuario>               usuarios                 { get { return this.GetTable<usuario>(); } }
		public ITable<usuarioperfil>         usuariosperfiles         { get { return this.GetTable<usuarioperfil>(); } }
		public ITable<usuariosesionactiva>   usuariossesionactivas    { get { return this.GetTable<usuariosesionactiva>(); } }

		public ispDB()
		{
		}

		public ispDB(string configuration)
			: base(configuration)
		{
		}

        void IDisposable.Dispose()
        {
            this.Connection.Close();
            base.Dispose();
        }
    }

	[Table(Schema="public", Name="actividadeseconomicas")]
	public partial class actividadeconomica
	{
		[PrimaryKey,    NotNull ] public short  id             { get; set; } // smallint
		[Column,        NotNull ] public string codigo         { get; set; } // character varying(20)
		[Column,        NotNull ] public string nombre         { get; set; } // character varying(500)
		[Column,        Nullable] public string descripcion    { get; set; } // character varying(500)
		[Column,        Nullable] public short? idpadre        { get; set; } // smallint
		[Column,        Nullable] public short? orden          { get; set; } // smallint
		[Column,        Nullable] public short? niveleconomico { get; set; } // smallint
		[Column,        Nullable] public bool?  activo         { get; set; } // boolean
		[Column,        Nullable] public short? idsector       { get; set; } // smallint

		#region RELACIONES

		/// <summary>
		/// fk_actividadeseconomicas_sectoresactividades
		/// </summary>
		[Association(ThisKey="idsector", OtherKey="id", CanBeNull=true)]
		public sectoreconomico fksectoresactividade { get; set; }

		public actividadeconomica Relacionar(sectoreconomico fksectoresactividade)
		{
			this.fksectoresactividade = fksectoresactividade;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="bancos")]
	public partial class banco
	{
		[PrimaryKey, Identity] public short  id       { get; set; } // smallint
		[Column,     Nullable] public string nombre   { get; set; } // character varying(25)
		[Column,     Nullable] public short? idcanton { get; set; } // smallint

		#region RELACIONES

		/// <summary>
		/// fk_bancos_cantones
		/// </summary>
		[Association(ThisKey="idcanton", OtherKey="id", CanBeNull=true)]
		public canton fkcantone { get; set; }

		public banco Relacionar(canton fkcantone)
		{
			this.fkcantone = fkcantone;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="barrios")]
	public partial class barrio
	{
		[PrimaryKey,    NotNull] public int    id          { get; set; } // integer
		[Column,        NotNull] public string nombre      { get; set; } // character varying(200)
		[Column,        NotNull] public short  idparroquia { get; set; } // smallint
		[Column,        NotNull] public bool   activo      { get; set; } // boolean

		#region RELACIONES

		/// <summary>
		/// fk_barrios_parroquias
		/// </summary>
		[Association(ThisKey="idparroquia", OtherKey="id", CanBeNull=false)]
		public parroquia fkparroquia { get; set; }

		public barrio Relacionar(parroquia fkparroquia)
		{
			this.fkparroquia = fkparroquia;
			return this;
		}

		/// <summary>
		/// fk_clientes_barrios_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idbarrio", CanBeNull=false)]
		public IEnumerable<cliente> fkclientes { get; set; }

		public barrio Relacionar(IEnumerable<cliente> fkclientes)
		{
			this.fkclientes = fkclientes;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="cantones")]
	public partial class canton
	{
		[PrimaryKey,    NotNull] public short  id          { get; set; } // smallint
		[Column,        NotNull] public string nombre      { get; set; } // character varying(50)
		[Column,        NotNull] public short  idprovincia { get; set; } // smallint

		#region RELACIONES

		/// <summary>
		/// fk_cantones_provincias
		/// </summary>
		[Association(ThisKey="idprovincia", OtherKey="id", CanBeNull=false)]
		public provincia fkprovincia { get; set; }

		public canton Relacionar(provincia fkprovincia)
		{
			this.fkprovincia = fkprovincia;
			return this;
		}

		/// <summary>
		/// fk_bancos_cantones_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idcanton", CanBeNull=false)]
		public IEnumerable<banco> fkbancos { get; set; }

		public canton Relacionar(IEnumerable<banco> fkbancos)
		{
			this.fkbancos = fkbancos;
			return this;
		}

		/// <summary>
		/// fk_parroquias_cantones_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idcanton", CanBeNull=false)]
		public IEnumerable<parroquia> fkparroquias { get; set; }

		public canton Relacionar(IEnumerable<parroquia> fkparroquias)
		{
			this.fkparroquias = fkparroquias;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="clientes")]
	public partial class cliente
	{
		[PrimaryKey,    NotNull ] public int       idpersona            { get; set; } // integer
		[Column,        Nullable] public string    razonsocial          { get; set; } // character varying(250)
		[Column,        NotNull ] public DateTime  fechaingreso         { get; set; } // date
		[Column,        Nullable] public string    telefono             { get; set; } // character varying(13)
		[Column,        Nullable] public byte[]    imagenfoto           { get; set; } // bytea
		[Column,        NotNull ] public int       idbarrio             { get; set; } // integer
		[Column,        Nullable] public string    celular              { get; set; } // character varying(13)
		[Column,        Nullable] public string    certificadovotacion  { get; set; } // character varying(15)
		[Column,        NotNull ] public short     idestadocivil        { get; set; } // smallint
		[Column,        Nullable] public int?      idconyugue           { get; set; } // integer
		[Column,        NotNull ] public short     idprofesion          { get; set; } // smallint
		[Column,        Nullable] public string    informacionadicional { get; set; } // character varying(200)
		[Column,        Nullable] public DateTime? fechaservidor        { get; set; } // timestamp (3) without time zone

		#region RELACIONES

		/// <summary>
		/// fk_clientes_profesiones
		/// </summary>
		[Association(ThisKey="idprofesion", OtherKey="id", CanBeNull=false)]
		public profesion fkprofesione { get; set; }

		public cliente Relacionar(profesion fkprofesione)
		{
			this.fkprofesione = fkprofesione;
			return this;
		}

		/// <summary>
		/// fk_clientes_personas_conyugue
		/// </summary>
		[Association(ThisKey="idconyugue", OtherKey="id", CanBeNull=true)]
		public persona fkpersonasconyugue { get; set; }

		/// <summary>
		/// fk_clientes_personas
		/// </summary>
		[Association(ThisKey="idpersona", OtherKey="id", CanBeNull=false)]
		public persona fkpersona { get; set; }

		public cliente Relacionar(persona fkpersona)
		{
			this.fkpersona = fkpersona;
			return this;
		}

		/// <summary>
		/// fk_clientes_estadosciviles
		/// </summary>
		[Association(ThisKey="idestadocivil", OtherKey="id", CanBeNull=false)]
		public estadocivil fkestadoscivile { get; set; }

		public cliente Relacionar(estadocivil fkestadoscivile)
		{
			this.fkestadoscivile = fkestadoscivile;
			return this;
		}

		/// <summary>
		/// fk_clientes_barrios
		/// </summary>
		[Association(ThisKey="idbarrio", OtherKey="id", CanBeNull=false)]
		public barrio fkbarrio { get; set; }

		public cliente Relacionar(barrio fkbarrio)
		{
			this.fkbarrio = fkbarrio;
			return this;
		}

		/// <summary>
		/// fk_ordenespedidos_clientes_BackReference
		/// </summary>
		[Association(ThisKey="idpersona", OtherKey="idcliente", CanBeNull=false)]
		public IEnumerable<ordenpedido> fkordenespedidos { get; set; }

		public cliente Relacionar(IEnumerable<ordenpedido> fkordenespedidos)
		{
			this.fkordenespedidos = fkordenespedidos;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="contables")]
	public partial class contable
	{
		[PrimaryKey,    NotNull ] public short     periodo           { get; set; } // smallint
		[Column,        NotNull ] public short     idtipocontable    { get; set; } // smallint
		[Column,        NotNull ] public int       numero            { get; set; } // integer
		[Column,        NotNull ] public DateTime  fecha             { get; set; } // date
		[Column,        Nullable] public DateTime? fechacreacion     { get; set; } // timestamp without time zone
		[Column,        Nullable] public DateTime? fechamodificacion { get; set; } // timestamp without time zone
		[Column,        Nullable] public int?      idpersona         { get; set; } // integer
		[Column,        Nullable] public decimal?  valor             { get; set; } // numeric(15,5)
		[Column,        Nullable] public string    observacion       { get; set; } // character varying(255)
		[Column,        Nullable] public short?    idusuarioregistra { get; set; } // smallint
		[Column,        Nullable] public short?    idusuariomodifica { get; set; } // smallint
		[Column,        NotNull ] public bool      eseditable        { get; set; } // boolean
		[Column,        Nullable] public bool?     esanulado         { get; set; } // boolean

		#region RELACIONES

		/// <summary>
		/// fk_contables_tiposcontable
		/// </summary>
		[Association(ThisKey="idtipocontable", OtherKey="id", CanBeNull=false)]
		public tipocontable fktiposcontable { get; set; }

		public contable Relacionar(tipocontable fktiposcontable)
		{
			this.fktiposcontable = fktiposcontable;
			return this;
		}

		/// <summary>
		/// fk_contables_personas
		/// </summary>
		[Association(ThisKey="idpersona", OtherKey="id", CanBeNull=true)]
		public persona fkpersona { get; set; }

		public contable Relacionar(persona fkpersona)
		{
			this.fkpersona = fkpersona;
			return this;
		}

		/// <summary>
		/// fk_detallescontables_contables_BackReference
		/// </summary>
		[Association(ThisKey="periodo, idtipocontable, numero", OtherKey="periodo, idtipocontable, numerocontable", CanBeNull=false)]
		public IEnumerable<detallecontable> fkdetallescontables { get; set; }

		public contable Relacionar(IEnumerable<detallecontable> fkdetallescontables)
		{
			this.fkdetallescontables = fkdetallescontables;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="contratos")]
	public partial class contrato
	{
		[PrimaryKey,    NotNull ] public int       id                        { get; set; } // integer
		[Column,        Nullable] public short?    iddocumento               { get; set; } // smallint
		[Column,        NotNull ] public int       idpersona                 { get; set; } // integer
		[Column,        NotNull ] public short     idplan                    { get; set; } // smallint
		[Column,        Nullable] public DateTime? fecha                     { get; set; } // date
		[Column,        Nullable] public DateTime? fechaservidor             { get; set; } // timestamp without time zone
		[Column,        Nullable] public DateTime? fechacancelacion          { get; set; } // timestamp without time zone
		[Column,        Nullable] public bool?     vigente                   { get; set; } // boolean
		[Column,        Nullable] public char?     mediotransmision          { get; set; } // character(1)
		[Column,        Nullable] public short?    horariosoporte            { get; set; } // smallint
		[Column,        Nullable] public short?    disponibilidad            { get; set; } // smallint
		[Column,        Nullable] public bool?     accesoconmutado           { get; set; } // boolean
		[Column,        Nullable] public bool?     accesocompartido          { get; set; } // boolean
		[Column,        Nullable] public string    comparticion              { get; set; } // character varying(4)
		[Column,        Nullable] public char?     tipoenlace                { get; set; } // character varying(1)
		[Column,        Nullable] public short?    velocidadminimacliente    { get; set; } // smallint
		[Column,        Nullable] public short?    velocidadminimaproveedor  { get; set; } // smallint
		[Column,        Nullable] public short?    velocidadmaximaproveedor  { get; set; } // smallint
		[Column,        Nullable] public short?    velocidadmaximacliente    { get; set; } // smallint
		[Column,        Nullable] public string    direccionentregafactura   { get; set; } // character varying(250)
		[Column,        Nullable] public decimal?  ivaactual                 { get; set; } // numeric(3,2)
		[Column,        Nullable] public decimal?  precioinstalacion         { get; set; } // numeric(5,2)
		[Column,        Nullable] public decimal?  preciomensual             { get; set; } // numeric(5,2)
		[Column,        Nullable] public bool?     autorizamanejoinformacion { get; set; } // boolean

		#region RELACIONES

		/// <summary>
		/// fk_contratos_planes
		/// </summary>
		[Association(ThisKey="idplan", OtherKey="id", CanBeNull=false)]
		public plan fkplane { get; set; }

		public contrato Relacionar(plan fkplane)
		{
			this.fkplane = fkplane;
			return this;
		}

		/// <summary>
		/// fk_contratos_personas
		/// </summary>
		[Association(ThisKey="idpersona", OtherKey="id", CanBeNull=false)]
		public persona fkpersona { get; set; }

		public contrato Relacionar(persona fkpersona)
		{
			this.fkpersona = fkpersona;
			return this;
		}

		/// <summary>
		/// fk_contratos_documentos
		/// </summary>
		[Association(ThisKey="iddocumento", OtherKey="id", CanBeNull=true)]
		public documento fkdocumento { get; set; }

		public contrato Relacionar(documento fkdocumento)
		{
			this.fkdocumento = fkdocumento;
			return this;
		}

		/// <summary>
		/// fk_ordenesservicios_contratos_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idcontrato", CanBeNull=false)]
		public IEnumerable<ordenservicio> fkordenesservicios { get; set; }

		public contrato Relacionar(IEnumerable<ordenservicio> fkordenesservicios)
		{
			this.fkordenesservicios = fkordenesservicios;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="contribuyentes")]
	public partial class contribuyente
	{
		[PrimaryKey,    NotNull] public short  id     { get; set; } // smallint
		[Column,        NotNull] public string nombre { get; set; } // character varying(100)
	}

	[Table(Schema="public", Name="conveniospagos")]
	public partial class conveniopago
	{
		[PrimaryKey,    NotNull] public int   identificadorpagos { get; set; } // integer
		[Column,        NotNull] public short idformapago        { get; set; } // smallint

		#region RELACIONES

		/// <summary>
		/// fk_conveniospagos_formaspagos
		/// </summary>
		[Association(ThisKey="idformapago", OtherKey="id", CanBeNull=false)]
		public formapago fkformaspago { get; set; }

		public conveniopago Relacionar(formapago fkformaspago)
		{
			this.fkformaspago = fkformaspago;
			return this;
		}

		/// <summary>
		/// fk_pagos_conveniospagos_BackReference
		/// </summary>
		[Association(ThisKey="identificadorpagos, idformapago", OtherKey="identificadorpagos, idformapago", CanBeNull=false)]
		public IEnumerable<pago> fkpagos { get; set; }

		public conveniopago Relacionar(IEnumerable<pago> fkpagos)
		{
			this.fkpagos = fkpagos;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="cuentasbancos")]
	public partial class cuentabanco
	{
		[PrimaryKey,    NotNull ] public short     id               { get; set; } // smallint
		[Column,        Nullable] public string    descripcion      { get; set; } // character varying(25)
		[Column,        Nullable] public short?    idbanco          { get; set; } // smallint
		[Column,        Nullable] public int?      idcuentacontable { get; set; } // integer
		[Column,        Nullable] public DateTime? fechaapertura    { get; set; } // date
		[Column,        Nullable] public decimal?  saldocuenta      { get; set; } // numeric(15,5)
		[Column,        Nullable] public string    numerocuenta     { get; set; } // character varying(25)

		#region RELACIONES

		/// <summary>
		/// fk_cuentasbancos_cuentascontables
		/// </summary>
		[Association(ThisKey="idcuentacontable", OtherKey="id", CanBeNull=true)]
		public cuentacontable fkcuentascontable { get; set; }

		public cuentabanco Relacionar(cuentacontable fkcuentascontable)
		{
			this.fkcuentascontable = fkcuentascontable;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="cuentascontables")]
	public partial class cuentacontable
	{
		[PrimaryKey,    NotNull] public int      id             { get; set; } // integer
		[Column,        NotNull] public int      idpadre        { get; set; } // integer
		[Column,        NotNull] public string   codigo         { get; set; } // character varying(20)
		[Column,        NotNull] public short    periodo        { get; set; } // smallint
		[Column,        NotNull] public string   nombre         { get; set; } // character varying(80)
		[Column,        NotNull] public bool     esgrupo        { get; set; } // boolean
		[Column,        NotNull] public decimal  debitoinicial  { get; set; } // numeric(15,2)
		[Column,        NotNull] public decimal  creditoinicial { get; set; } // numeric(15,2)
		[Column,        NotNull] public DateTime fechaapertura  { get; set; } // timestamp without time zone

		#region RELACIONES

		/// <summary>
		/// fk_detallescontables_cuentascontables_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idcuentacontable", CanBeNull=false)]
		public IEnumerable<detallecontable> fkdetallescontables { get; set; }

		public cuentacontable Relacionar(IEnumerable<detallecontable> fkdetallescontables)
		{
			this.fkdetallescontables = fkdetallescontables;
			return this;
		}

		/// <summary>
		/// fk_cuentasbancos_cuentascontables_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idcuentacontable", CanBeNull=false)]
		public IEnumerable<cuentabanco> fkcuentasbancos { get; set; }

		public cuentacontable Relacionar(IEnumerable<cuentabanco> fkcuentasbancos)
		{
			this.fkcuentasbancos = fkcuentasbancos;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="detallescontables")]
	public partial class detallecontable
	{
		[PrimaryKey,    NotNull ] public short   periodo          { get; set; } // smallint
		[Column,        NotNull ] public short   idtipocontable   { get; set; } // smallint
		[Column,        NotNull ] public int     numerocontable   { get; set; } // integer
		[Column,        NotNull ] public short   registro         { get; set; } // smallint
		[Column,        NotNull ] public int     idcuentacontable { get; set; } // integer
		[Column,        Nullable] public string  detallecuenta    { get; set; } // character varying(255)
		[Column,        NotNull ] public decimal valordebe        { get; set; } // numeric(15,5)
		[Column,        NotNull ] public decimal valorhaber       { get; set; } // numeric(15,5)
		[Column,        NotNull ] public short   tipomovimiento   { get; set; } // smallint

		#region RELACIONES

		/// <summary>
		/// fk_detallescontables_cuentascontables
		/// </summary>
		[Association(ThisKey="idcuentacontable", OtherKey="id", CanBeNull=false)]
		public cuentacontable fkcuentascontable { get; set; }

		public detallecontable Relacionar(cuentacontable fkcuentascontable)
		{
			this.fkcuentascontable = fkcuentascontable;
			return this;
		}

		/// <summary>
		/// fk_detallescontables_contables
		/// </summary>
		[Association(ThisKey="periodo, idtipocontable, numerocontable", OtherKey="periodo, idtipocontable, numero", CanBeNull=false)]
		public contable fkcontable { get; set; }

		public detallecontable Relacionar(contable fkcontable)
		{
			this.fkcontable = fkcontable;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="detallesordenesservicios")]
	public partial class detalleordenservicio
	{
		[PrimaryKey,    NotNull ] public int     idordenservicio  { get; set; } // integer
		[Column,        NotNull ] public int     iditeminventario { get; set; } // integer
		[Column,        NotNull ] public short   numero           { get; set; } // smallint
		[Column,        NotNull ] public decimal cantidad         { get; set; } // numeric(8,2)
		[Column,        NotNull ] public decimal precio           { get; set; } // numeric(10,2)
		[Column,        Nullable] public bool?   grabaiva         { get; set; } // boolean
		[Column,        Nullable] public string  detalle          { get; set; } // character varying(255)

		#region RELACIONES

		/// <summary>
		/// fk_detallesordenesservicios_itemsinventarios
		/// </summary>
		[Association(ThisKey="iditeminventario", OtherKey="id", CanBeNull=false)]
		public iteminventario fkitemsinventario { get; set; }

		public detalleordenservicio Relacionar(iteminventario fkitemsinventario)
		{
			this.fkitemsinventario = fkitemsinventario;
			return this;
		}

		/// <summary>
		/// fk_detallesordenesservicios_ordenesservicios
		/// </summary>
		[Association(ThisKey="idordenservicio", OtherKey="id", CanBeNull=false)]
		public ordenservicio fkordenesservicio { get; set; }

		public detalleordenservicio Relacionar(ordenservicio fkordenesservicio)
		{
			this.fkordenesservicio = fkordenesservicio;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="detallesordenespedidos")]
	public partial class detallesordenespedido
	{
		[PrimaryKey,    NotNull] public int     idordenpedido { get; set; } // integer
		[Column,        NotNull] public int     idproducto    { get; set; } // integer
		[Column,        NotNull] public short   cantidad      { get; set; } // smallint
		[Column,        NotNull] public decimal precio        { get; set; } // numeric(8,2)

		#region RELACIONES

		/// <summary>
		/// fk_detallesordenespedidos_productos
		/// </summary>
		[Association(ThisKey="idproducto", OtherKey="id", CanBeNull=false)]
		public producto fkproducto { get; set; }

		public detallesordenespedido Relacionar(producto fkproducto)
		{
			this.fkproducto = fkproducto;
			return this;
		}

		/// <summary>
		/// fk_detallesordenespedidos_ordenespedidos
		/// </summary>
		[Association(ThisKey="idordenpedido", OtherKey="id", CanBeNull=false)]
		public ordenpedido fkordenespedido { get; set; }

		public detallesordenespedido Relacionar(ordenpedido fkordenespedido)
		{
			this.fkordenespedido = fkordenespedido;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="documentos")]
	public partial class documento
	{
		[PrimaryKey,    NotNull ] public short  id          { get; set; } // smallint
		[Column,        Nullable] public string descripcion { get; set; } // character varying(100)
		[Column,        Nullable] public string contenido   { get; set; } // character(10)

		#region RELACIONES

		/// <summary>
		/// fk_contratos_documentos_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="iddocumento", CanBeNull=false)]
		public IEnumerable<contrato> fkcontratos { get; set; }

		public documento Relacionar(IEnumerable<contrato> fkcontratos)
		{
			this.fkcontratos = fkcontratos;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="estadosciviles")]
	public partial class estadocivil
	{
		[PrimaryKey,    NotNull] public short  id     { get; set; } // smallint
		[Column,        NotNull] public string nombre { get; set; } // character varying(20)

		#region RELACIONES

		/// <summary>
		/// fk_clientes_estadosciviles_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idestadocivil", CanBeNull=false)]
		public IEnumerable<cliente> fkclientes { get; set; }

		public estadocivil Relacionar(IEnumerable<cliente> fkclientes)
		{
			this.fkclientes = fkclientes;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="estadosordenespedidos")]
	public partial class estadoordenpedido
	{
		[PrimaryKey,    NotNull] public short  id          { get; set; } // smallint
		[Column,        NotNull] public string descripcion { get; set; } // character varying(50)
		[Column,        NotNull] public bool   activo      { get; set; } // boolean

		#region RELACIONES

		/// <summary>
		/// fk_ordenespedidos_estadosordenespedidos_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idestadoordenpedido", CanBeNull=false)]
		public IEnumerable<ordenpedido> fkordenespedidos { get; set; }

		public estadoordenpedido Relacionar(IEnumerable<ordenpedido> fkordenespedidos)
		{
			this.fkordenespedidos = fkordenespedidos;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="estadospersonas")]
	public partial class estadopersona
	{
		[PrimaryKey,    NotNull ] public short  id          { get; set; } // smallint
		[Column,        Nullable] public string descripcion { get; set; } // character varying(13)
		[Column,        Nullable] public char?  abreviatura { get; set; } // character(1)

		#region RELACIONES

		/// <summary>
		/// fk_personas_estadospersonas_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idestadopersona", CanBeNull=false)]
		public IEnumerable<persona> fkpersonas { get; set; }

		public estadopersona Relacionar(IEnumerable<persona> fkpersonas)
		{
			this.fkpersonas = fkpersonas;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="formaspagos")]
	public partial class formapago
	{
		[PrimaryKey,    NotNull ] public short  id          { get; set; } // smallint
		[Column,        Nullable] public string descripcion { get; set; } // character varying(30)

		#region RELACIONES

		/// <summary>
		/// fk_conveniospagos_formaspagos_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idformapago", CanBeNull=false)]
		public IEnumerable<conveniopago> fkconveniospagos { get; set; }

		public formapago Relacionar(IEnumerable<conveniopago> fkconveniospagos)
		{
			this.fkconveniospagos = fkconveniospagos;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="generos")]
	public partial class genero
	{
		[PrimaryKey,    NotNull ] public short  id          { get; set; } // smallint
		[Column,        Nullable] public string descripcion { get; set; } // character varying(15)
		[Column,        Nullable] public char?  abreviatura { get; set; } // character(1)

		#region RELACIONES

		/// <summary>
		/// fk_personas_generos_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idgenero", CanBeNull=false)]
		public IEnumerable<persona> fkpersonas { get; set; }

		public genero Relacionar(IEnumerable<persona> fkpersonas)
		{
			this.fkpersonas = fkpersonas;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="identificadorespagos")]
	public partial class identificadorpago
	{
		[PrimaryKey,    NotNull] public int id { get; set; } // integer

		#region RELACIONES

		/// <summary>
		/// fk_ordenespedidos_identificadorespagos_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="ididentificadorpago", CanBeNull=false)]
		public IEnumerable<ordenpedido> fkordenespedidos { get; set; }

		public identificadorpago Relacionar(IEnumerable<ordenpedido> fkordenespedidos)
		{
			this.fkordenespedidos = fkordenespedidos;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="itemsinventarios")]
	public partial class iteminventario
	{
		[PrimaryKey,    NotNull ] public int     id          { get; set; } // integer
		[Column,        NotNull ] public string  descripcion { get; set; } // character varying(255)
		[Column,        NotNull ] public decimal precio      { get; set; } // numeric(5,2)
		[Column,        NotNull ] public char    tipo        { get; set; } // character varying(1)
		[Column,        Nullable] public bool?   grabaiva    { get; set; } // boolean

		#region RELACIONES

		/// <summary>
		/// fk_detallesordenesservicios_itemsinventarios_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="iditeminventario", CanBeNull=false)]
		public IEnumerable<detalleordenservicio> fkdetallesordenesservicios { get; set; }

		public iteminventario Relacionar(IEnumerable<detalleordenservicio> fkdetallesordenesservicios)
		{
			this.fkdetallesordenesservicios = fkdetallesordenesservicios;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="menus")]
	public partial class menu
	{
		[PrimaryKey,    NotNull ] public short  id         { get; set; } // smallint
		[Column,        Nullable] public short? idpadre    { get; set; } // smallint
		[Column,        Nullable] public string nombre     { get; set; } // character varying(50)
		[Column,        Nullable] public string titulo     { get; set; } // character varying(50)
		[Column,        NotNull ] public bool   visible    { get; set; } // boolean
		[Column,        NotNull ] public bool   contenedor { get; set; } // boolean
		[Column,        Nullable] public string formulario { get; set; } // character varying(50)
		[Column,        Nullable] public string modulo     { get; set; } // character varying(50)
		[Column,        Nullable] public string busqueda   { get; set; } // character varying(50)
		[Column,        NotNull ] public bool   piedetalle { get; set; } // boolean
		[Column,        NotNull ] public short  icono      { get; set; } // smallint

		#region RELACIONES

		/// <summary>
		/// fk_perfilesmenus_menus_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idmenu", CanBeNull=false)]
		public IEnumerable<perfilmenu> fkperfilesmenus { get; set; }

		public menu Relacionar(IEnumerable<perfilmenu> fkperfilesmenus)
		{
			this.fkperfilesmenus = fkperfilesmenus;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="operadorastelefonias")]
	public partial class operadoratelefonia
	{
		[PrimaryKey,    NotNull ] public short  id     { get; set; } // smallint
		[Column,        Nullable] public string nombre { get; set; } // character varying(30)
	}

	[Table(Schema="public", Name="ordenespedidos")]
	public partial class ordenpedido
	{
		[PrimaryKey,    NotNull ] public int      id                  { get; set; } // integer
		[Column,        NotNull ] public int      idcliente           { get; set; } // integer
		[Column,        NotNull ] public DateTime fecha               { get; set; } // timestamp (6) without time zone
		[Column,        Nullable] public string   observacion         { get; set; } // character varying(100)
		[Column,        NotNull ] public short    idestadoordenpedido { get; set; } // smallint
		[Column,        NotNull ] public short    idusuarioregistra   { get; set; } // smallint
		[Column,        Nullable] public short?   idusuarioanula      { get; set; } // smallint
		[Column,        Nullable] public int?     ididentificadorpago { get; set; } // integer

		#region RELACIONES

		/// <summary>
		/// fk_ordenespedidos_clientes
		/// </summary>
		[Association(ThisKey="idcliente", OtherKey="idpersona", CanBeNull=false)]
		public cliente fkcliente { get; set; }

		public ordenpedido Relacionar(cliente fkcliente)
		{
			this.fkcliente = fkcliente;
			return this;
		}

		/// <summary>
		/// fk_ordenespedidos_usuarios1
		/// </summary>
		[Association(ThisKey="idusuarioanula", OtherKey="id", CanBeNull=true)]
		public usuario fkusuarios1 { get; set; }

		/// <summary>
		/// fk_ordenespedidos_usuarios
		/// </summary>
		[Association(ThisKey="idusuarioregistra", OtherKey="id", CanBeNull=false)]
		public usuario fkusuario { get; set; }

		public ordenpedido Relacionar(usuario fkusuario)
		{
			this.fkusuario = fkusuario;
			return this;
		}

		/// <summary>
		/// fk_ordenespedidos_identificadorespagos
		/// </summary>
		[Association(ThisKey="ididentificadorpago", OtherKey="id", CanBeNull=true)]
		public identificadorpago fkidentificadorespago { get; set; }

		public ordenpedido Relacionar(identificadorpago fkidentificadorespago)
		{
			this.fkidentificadorespago = fkidentificadorespago;
			return this;
		}

		/// <summary>
		/// fk_ordenespedidos_estadosordenespedidos
		/// </summary>
		[Association(ThisKey="idestadoordenpedido", OtherKey="id", CanBeNull=false)]
		public estadoordenpedido fkestadosordenespedido { get; set; }

		public ordenpedido Relacionar(estadoordenpedido fkestadosordenespedido)
		{
			this.fkestadosordenespedido = fkestadosordenespedido;
			return this;
		}

		/// <summary>
		/// fk_detallesordenespedidos_ordenespedidos_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idordenpedido", CanBeNull=false)]
		public detallesordenespedido fkdetallesordenespedido { get; set; }

		public ordenpedido Relacionar(detallesordenespedido fkdetallesordenespedido)
		{
			this.fkdetallesordenespedido = fkdetallesordenespedido;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="ordenesservicios")]
	public partial class ordenservicio
	{
		[PrimaryKey,    NotNull ] public int       id              { get; set; } // integer
		[Column,        Nullable] public int?      idcontrato      { get; set; } // integer
		[Column,        Nullable] public short?    idtiposervicio  { get; set; } // smallint
		[Column,        Nullable] public string    detalle         { get; set; } // character varying(255)
		[Column,        NotNull ] public DateTime  fechaservicio   { get; set; } // timestamp without time zone
		[Column,        Nullable] public char?     estado          { get; set; } // character varying(1)
		[Column,        NotNull ] public DateTime  fechadefinicion { get; set; } // date
		[Column,        Nullable] public DateTime? fechaservidor   { get; set; } // timestamp without time zone

		#region RELACIONES

		/// <summary>
		/// fk_ordenesservicios_tiposservicios
		/// </summary>
		[Association(ThisKey="idtiposervicio", OtherKey="id", CanBeNull=true)]
		public tiposervicio fktiposservicio { get; set; }

		public ordenservicio Relacionar(tiposervicio fktiposservicio)
		{
			this.fktiposservicio = fktiposservicio;
			return this;
		}

		/// <summary>
		/// fk_ordenesservicios_contratos
		/// </summary>
		[Association(ThisKey="idcontrato", OtherKey="id", CanBeNull=true)]
		public contrato fkcontrato { get; set; }

		public ordenservicio Relacionar(contrato fkcontrato)
		{
			this.fkcontrato = fkcontrato;
			return this;
		}

		/// <summary>
		/// fk_detallesordenesservicios_ordenesservicios_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idordenservicio", CanBeNull=false)]
		public detalleordenservicio fkdetallesordenesservicio { get; set; }

		public ordenservicio Relacionar(detalleordenservicio fkdetallesordenesservicio)
		{
			this.fkdetallesordenesservicio = fkdetallesordenesservicio;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="pagos")]
	public partial class pago
	{
		[PrimaryKey,    NotNull ] public int       identificadorpagos { get; set; } // integer
		[Column,        NotNull ] public short     idformapago        { get; set; } // smallint
		[Column,        NotNull ] public short     numero             { get; set; } // smallint
		[Column,        Nullable] public bool?     notificacion       { get; set; } // boolean
		[Column,        Nullable] public DateTime? fecha              { get; set; } // timestamp without time zone
		[Column,        NotNull ] public short     idusuariocobranzas { get; set; } // smallint
		[Column,        Nullable] public decimal?  valor              { get; set; } // numeric(18,2)
		[Column,        Nullable] public string    detalle            { get; set; } // character varying(255)
		[Column,        Nullable] public short?    idusuarioregistra  { get; set; } // smallint
		[Column,        Nullable] public short?    idusuarioanula     { get; set; } // smallint
		[Column,        Nullable] public bool?     anulado            { get; set; } // boolean

		#region RELACIONES

		/// <summary>
		/// fk_pagos_conveniospagos
		/// </summary>
		[Association(ThisKey="identificadorpagos, idformapago", OtherKey="identificadorpagos, idformapago", CanBeNull=false)]
		public conveniopago fkconveniospago { get; set; }

		public pago Relacionar(conveniopago fkconveniospago)
		{
			this.fkconveniospago = fkconveniospago;
			return this;
		}

		/// <summary>
		/// fk_pagos_usuarios
		/// </summary>
		[Association(ThisKey="idusuariocobranzas", OtherKey="id", CanBeNull=false)]
		public usuario fkusuario { get; set; }

		public pago Relacionar(usuario fkusuario)
		{
			this.fkusuario = fkusuario;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="parametrosgenerales")]
	public partial class parametrogeneral
	{
		[PrimaryKey,    NotNull ] public int    id     { get; set; } // integer
		[Column,        Nullable] public string nombre { get; set; } // character varying(30)
		[Column,        Nullable] public string valor  { get; set; } // character varying(255)
	}

	[Table(Schema="public", Name="parroquias")]
	public partial class parroquia
	{
		[PrimaryKey,    NotNull] public short  id       { get; set; } // smallint
		[Column,        NotNull] public string nombre   { get; set; } // character varying(100)
		[Column,        NotNull] public short  idcanton { get; set; } // smallint
		[Column,        NotNull] public bool   esurbano { get; set; } // boolean

		#region RELACIONES

		/// <summary>
		/// fk_parroquias_cantones
		/// </summary>
		[Association(ThisKey="idcanton", OtherKey="id", CanBeNull=false)]
		public canton fkcantone { get; set; }

		public parroquia Relacionar(canton fkcantone)
		{
			this.fkcantone = fkcantone;
			return this;
		}

		/// <summary>
		/// fk_barrios_parroquias_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idparroquia", CanBeNull=false)]
		public IEnumerable<barrio> fkbarrios { get; set; }

		public parroquia Relacionar(IEnumerable<barrio> fkbarrios)
		{
			this.fkbarrios = fkbarrios;
			return this;
		}

		/// <summary>
		/// fk_personas_parroquias_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idparroquiadocumento", CanBeNull=false)]
		public IEnumerable<persona> fkpersonas { get; set; }

		public parroquia Relacionar(IEnumerable<persona> fkpersonas)
		{
			this.fkpersonas = fkpersonas;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="perfiles")]
	public partial class perfil
	{
		[PrimaryKey,    NotNull ] public short  id          { get; set; } // smallint
		[Column,        Nullable] public string descripcion { get; set; } // character varying(20)
		[Column,        Nullable] public bool?  activo      { get; set; } // boolean

		#region RELACIONES

		/// <summary>
		/// fk_perfilesmenus_perfiles_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idperfil", CanBeNull=false)]
		public perfilmenu fkperfilesmenu { get; set; }

		public perfil Relacionar(perfilmenu fkperfilesmenu)
		{
			this.fkperfilesmenu = fkperfilesmenu;
			return this;
		}

		/// <summary>
		/// fk_usuariosperfiles_perfiles_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idperfil", CanBeNull=false)]
		public IEnumerable<usuarioperfil> fkusuariosperfiles { get; set; }

		public perfil Relacionar(IEnumerable<usuarioperfil> fkusuariosperfiles)
		{
			this.fkusuariosperfiles = fkusuariosperfiles;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="perfilesmenus")]
	public partial class perfilmenu
	{
		[PrimaryKey,    NotNull] public short idperfil { get; set; } // smallint
		[Column,        NotNull] public short idmenu   { get; set; } // smallint
		[Column,        NotNull] public bool  editable { get; set; } // boolean

		#region RELACIONES

		/// <summary>
		/// fk_perfilesmenus_perfiles
		/// </summary>
		[Association(ThisKey="idperfil", OtherKey="id", CanBeNull=false)]
		public perfil fkperfile { get; set; }

		public perfilmenu Relacionar(perfil fkperfile)
		{
			this.fkperfile = fkperfile;
			return this;
		}

		/// <summary>
		/// fk_perfilesmenus_menus
		/// </summary>
		[Association(ThisKey="idmenu", OtherKey="id", CanBeNull=false)]
		public menu fkmenu { get; set; }

		public perfilmenu Relacionar(menu fkmenu)
		{
			this.fkmenu = fkmenu;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="periodos")]
	public partial class periodo
	{
		[PrimaryKey,    NotNull] public short anio    { get; set; } // smallint
		[Column,        NotNull] public short mes     { get; set; } // smallint
		[Column,        NotNull] public bool  cerrado { get; set; } // boolean
	}

	[Table(Schema="public", Name="personas")]
	public partial class persona
	{
		[PrimaryKey,    NotNull ] public int      id                   { get; set; } // integer
		[Column,        NotNull ] public string   apellido             { get; set; } // character varying(50)
		[Column,        NotNull ] public string   nombre               { get; set; } // character varying(50)
		[Column,        NotNull ] public short    idtipopersona        { get; set; } // smallint
		[Column,        Nullable] public short?   idtipodocumento      { get; set; } // smallint
		[Column,        NotNull ] public string   identificacion       { get; set; } // character varying(13)
		[Column,        NotNull ] public short    idgenero             { get; set; } // smallint
		[Column,        NotNull ] public short    idparroquiadocumento { get; set; } // smallint
		[Column,        NotNull ] public short    idestadopersona      { get; set; } // smallint
		[Column,        NotNull ] public DateTime fechaservidor        { get; set; } // timestamp (3) without time zone
		[Column,        NotNull ] public int      version              { get; set; } // integer
		[Column,        Nullable] public string   referenciadireccion  { get; set; } // character varying(200)
		[Column,        Nullable] public string   correo               { get; set; } // character varying(100)

		#region RELACIONES

		/// <summary>
		/// fk_personas_tipospersonas
		/// </summary>
		[Association(ThisKey="idtipopersona", OtherKey="id", CanBeNull=false)]
		public tipopersona fktipospersona { get; set; }

		public persona Relacionar(tipopersona fktipospersona)
		{
			this.fktipospersona = fktipospersona;
			return this;
		}

		/// <summary>
		/// fk_personas_tiposdocumentos
		/// </summary>
		[Association(ThisKey="idtipodocumento", OtherKey="id", CanBeNull=true)]
		public tipodocumento fktiposdocumento { get; set; }

		public persona Relacionar(tipodocumento fktiposdocumento)
		{
			this.fktiposdocumento = fktiposdocumento;
			return this;
		}

		/// <summary>
		/// fk_personas_estadospersonas
		/// </summary>
		[Association(ThisKey="idestadopersona", OtherKey="id", CanBeNull=false)]
		public estadopersona fkestadospersona { get; set; }

		public persona Relacionar(estadopersona fkestadospersona)
		{
			this.fkestadospersona = fkestadospersona;
			return this;
		}

		/// <summary>
		/// fk_personas_parroquias
		/// </summary>
		[Association(ThisKey="idparroquiadocumento", OtherKey="id", CanBeNull=false)]
		public parroquia fkparroquia { get; set; }

		public persona Relacionar(parroquia fkparroquia)
		{
			this.fkparroquia = fkparroquia;
			return this;
		}

		/// <summary>
		/// fk_personas_generos
		/// </summary>
		[Association(ThisKey="idgenero", OtherKey="id", CanBeNull=false)]
		public genero fkgenero { get; set; }

		public persona Relacionar(genero fkgenero)
		{
			this.fkgenero = fkgenero;
			return this;
		}

		/// <summary>
		/// fk_contratos_personas_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idpersona", CanBeNull=false)]
		public IEnumerable<contrato> fkcontratos { get; set; }

		public persona Relacionar(IEnumerable<contrato> fkcontratos)
		{
			this.fkcontratos = fkcontratos;
			return this;
		}

		/// <summary>
		/// fk_clientes_personas_conyugue_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idconyugue", CanBeNull=false)]
		public IEnumerable<cliente> fkclientesconyugues { get; set; }

		public persona Relacionar(IEnumerable<cliente> fkclientesconyugues)
		{
			this.fkclientesconyugues = fkclientesconyugues;
			return this;
		}

		/// <summary>
		/// fk_clientes_personas_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idpersona", CanBeNull=false)]
		public cliente fkcliente { get; set; }

		public persona Relacionar(cliente fkcliente)
		{
			this.fkcliente = fkcliente;
			return this;
		}

		/// <summary>
		/// fk_contables_personas_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idpersona", CanBeNull=false)]
		public IEnumerable<contable> fkcontables { get; set; }

		public persona Relacionar(IEnumerable<contable> fkcontables)
		{
			this.fkcontables = fkcontables;
			return this;
		}

		/// <summary>
		/// fk_usuarios_personas_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idpersona", CanBeNull=false)]
		public IEnumerable<usuario> fkusuarios { get; set; }

		public persona Relacionar(IEnumerable<usuario> fkusuarios)
		{
			this.fkusuarios = fkusuarios;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="planes")]
	public partial class plan
	{
		[PrimaryKey,    NotNull ] public short    id         { get; set; } // smallint
		[Column,        Nullable] public short?   idtipoplan { get; set; } // smallint
		[Column,        Nullable] public decimal? precio     { get; set; } // numeric(5,2)
		[Column,        Nullable] public string   anchobanda { get; set; } // character varying(20)
		[Column,        Nullable] public bool?    activo     { get; set; } // boolean

		#region RELACIONES

		/// <summary>
		/// fk_planes_tiposplanes
		/// </summary>
		[Association(ThisKey="idtipoplan", OtherKey="id", CanBeNull=true)]
		public tipoplan fktiposplane { get; set; }

		public plan Relacionar(tipoplan fktiposplane)
		{
			this.fktiposplane = fktiposplane;
			return this;
		}

		/// <summary>
		/// fk_contratos_planes_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idplan", CanBeNull=false)]
		public IEnumerable<contrato> fkcontratos { get; set; }

		public plan Relacionar(IEnumerable<contrato> fkcontratos)
		{
			this.fkcontratos = fkcontratos;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="productos")]
	public partial class producto
	{
		[PrimaryKey,    NotNull] public int     id               { get; set; } // integer
		[Column,        NotNull] public short   idunidaddemedida { get; set; } // smallint
		[Column,        NotNull] public string  descripcion      { get; set; } // character varying(100)
		[Column,        NotNull] public decimal precio1          { get; set; } // numeric(8,2)
		[Column,        NotNull] public decimal precio2          { get; set; } // numeric(8,2)
		[Column,        NotNull] public decimal precio3          { get; set; } // numeric(8,2)
		[Column,        NotNull] public decimal stock            { get; set; } // numeric(5,2)

		#region RELACIONES

		/// <summary>
		/// fk_productos_unidadesdemedida
		/// </summary>
		[Association(ThisKey="idunidaddemedida", OtherKey="id", CanBeNull=false)]
		public unidaddemedida fkunidadesdemedida { get; set; }

		public producto Relacionar(unidaddemedida fkunidadesdemedida)
		{
			this.fkunidadesdemedida = fkunidadesdemedida;
			return this;
		}

		/// <summary>
		/// fk_detallesordenespedidos_productos_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idproducto", CanBeNull=false)]
		public IEnumerable<detallesordenespedido> fkdetallesordenespedidos { get; set; }

		public producto Relacionar(IEnumerable<detallesordenespedido> fkdetallesordenespedidos)
		{
			this.fkdetallesordenespedidos = fkdetallesordenespedidos;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="profesiones")]
	public partial class profesion
	{
		[PrimaryKey,    NotNull ] public short  id          { get; set; } // smallint
		[Column,        Nullable] public string nombre      { get; set; } // character varying(100)
		[Column,        Nullable] public string abreviatura { get; set; } // character varying(5)

		#region RELACIONES

		/// <summary>
		/// fk_clientes_profesiones_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idprofesion", CanBeNull=false)]
		public IEnumerable<cliente> fkclientes { get; set; }

		public profesion Relacionar(IEnumerable<cliente> fkclientes)
		{
			this.fkclientes = fkclientes;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="provincias")]
	public partial class provincia
	{
		[PrimaryKey,    NotNull] public short  id     { get; set; } // smallint
		[Column,        NotNull] public string nombre { get; set; } // character varying(50)

		#region RELACIONES

		/// <summary>
		/// fk_cantones_provincias_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idprovincia", CanBeNull=false)]
		public IEnumerable<canton> fkcantones { get; set; }

		public provincia Relacionar(IEnumerable<canton> fkcantones)
		{
			this.fkcantones = fkcantones;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="sectoreseconomicos")]
	public partial class sectoreconomico
	{
		[PrimaryKey,    NotNull ] public short  id          { get; set; } // smallint
		[Column,        NotNull ] public string codigo      { get; set; } // character varying(20)
		[Column,        Nullable] public string descripcion { get; set; } // character varying(500)
		[Column,        Nullable] public short? idpadre     { get; set; } // smallint
		[Column,        Nullable] public short? nivel       { get; set; } // smallint
		[Column,        Nullable] public bool?  activo      { get; set; } // boolean

		#region RELACIONES

		/// <summary>
		/// fk_actividadeseconomicas_sectoresactividades_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idsector", CanBeNull=false)]
		public IEnumerable<actividadeconomica> fkactividadeseconomicassectoresactividades { get; set; }

		public sectoreconomico Relacionar(IEnumerable<actividadeconomica> fkactividadeseconomicassectoresactividades)
		{
			this.fkactividadeseconomicassectoresactividades = fkactividadeseconomicassectoresactividades;
			return this;
		}

		#endregion
	}

	// Vista
	[Table(Schema="public", Name="statbase")]
	public partial class statbase
	{
		[Column(SkipOnUpdate=true), Nullable] public int?   datid           { get; set; } // oid
		[Column(SkipOnUpdate=true), Nullable] public string bdd             { get; set; } // name
		[Column(SkipOnUpdate=true), Nullable] public int?   pid             { get; set; } // integer
		[Column(SkipOnUpdate=true), Nullable] public int?   usesysid        { get; set; } // oid
		[Column(SkipOnUpdate=true), Nullable] public string usename         { get; set; } // name
		[Column(SkipOnUpdate=true), Nullable] public object dirip           { get; set; } // inet
		[Column(SkipOnUpdate=true), Nullable] public string client_hostname { get; set; } // text
		[Column(SkipOnUpdate=true), Nullable] public int?   client_port     { get; set; } // integer
		[Column(SkipOnUpdate=true), Nullable] public bool?  waiting         { get; set; } // boolean
		[Column(SkipOnUpdate=true), Nullable] public string state           { get; set; } // text
		[Column(SkipOnUpdate=true), Nullable] public string query           { get; set; } // text
	}

	[Table(Schema="public", Name="tiposcontables")]
	public partial class tipocontable
	{
		[PrimaryKey,    NotNull] public short  id          { get; set; } // smallint
		[Column,        NotNull] public string descripcion { get; set; } // character varying(100)

		#region RELACIONES

		/// <summary>
		/// fk_contables_tiposcontable_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idtipocontable", CanBeNull=false)]
		public IEnumerable<contable> fkcontablestiposcontables { get; set; }

		public tipocontable Relacionar(IEnumerable<contable> fkcontablestiposcontables)
		{
			this.fkcontablestiposcontables = fkcontablestiposcontables;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="tiposdocumentos")]
	public partial class tipodocumento
	{
		[PrimaryKey,    NotNull ] public short  id          { get; set; } // smallint
		[Column,        Nullable] public string descripcion { get; set; } // character varying(13)
		[Column,        Nullable] public char?  abreviatura { get; set; } // character(1)

		#region RELACIONES

		/// <summary>
		/// fk_personas_tiposdocumentos_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idtipodocumento", CanBeNull=false)]
		public IEnumerable<persona> fkpersonas { get; set; }

		public tipodocumento Relacionar(IEnumerable<persona> fkpersonas)
		{
			this.fkpersonas = fkpersonas;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="tipospersonas")]
	public partial class tipopersona
	{
		[PrimaryKey,    NotNull ] public short  id          { get; set; } // smallint
		[Column,        Nullable] public string descripcion { get; set; } // character varying(13)
		[Column,        Nullable] public char?  abreviatura { get; set; } // character(1)

		#region RELACIONES

		/// <summary>
		/// fk_personas_tipospersonas_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idtipopersona", CanBeNull=false)]
		public IEnumerable<persona> fkpersonas { get; set; }

		public tipopersona Relacionar(IEnumerable<persona> fkpersonas)
		{
			this.fkpersonas = fkpersonas;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="tiposplanes")]
	public partial class tipoplan
	{
		[PrimaryKey,    NotNull ] public short  id          { get; set; } // smallint
		[Column,        Nullable] public string descripcion { get; set; } // character varying(20)
		[Column,        Nullable] public bool?  activo      { get; set; } // boolean

		#region RELACIONES

		/// <summary>
		/// fk_planes_tiposplanes_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idtipoplan", CanBeNull=false)]
		public IEnumerable<plan> fkplanes { get; set; }

		public tipoplan Relacionar(IEnumerable<plan> fkplanes)
		{
			this.fkplanes = fkplanes;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="tiposservicios")]
	public partial class tiposervicio
	{
		[PrimaryKey,    NotNull ] public short  id          { get; set; } // smallint
		[Column,        Nullable] public string descripcion { get; set; } // character varying(20)
		[Column,        Nullable] public bool?  activo      { get; set; } // boolean

		#region RELACIONES

		/// <summary>
		/// fk_ordenesservicios_tiposservicios_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idtiposervicio", CanBeNull=false)]
		public IEnumerable<ordenservicio> fkordenesservicios { get; set; }

		public tiposervicio Relacionar(IEnumerable<ordenservicio> fkordenesservicios)
		{
			this.fkordenesservicios = fkordenesservicios;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="unidadesdemedida")]
	public partial class unidaddemedida
	{
		[PrimaryKey,    NotNull] public short  id          { get; set; } // smallint
		[Column,        NotNull] public string descripcion { get; set; } // character varying(50)
		[Column,        NotNull] public bool   activo      { get; set; } // boolean

		#region RELACIONES

		/// <summary>
		/// fk_productos_unidadesdemedida_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idunidaddemedida", CanBeNull=false)]
		public IEnumerable<producto> fkproductos { get; set; }

		public unidaddemedida Relacionar(IEnumerable<producto> fkproductos)
		{
			this.fkproductos = fkproductos;
			return this;
		}

		#endregion
	}

	// Vista
	[Table(Schema="public", Name="uso_base")]
	public partial class uso_base
	{
		[Column(SkipOnUpdate=true), Nullable] public int?   datid           { get; set; } // oid
		[Column(SkipOnUpdate=true), Nullable] public string bdd             { get; set; } // name
		[Column(SkipOnUpdate=true), Nullable] public int?   pid             { get; set; } // integer
		[Column(SkipOnUpdate=true), Nullable] public int?   usesysid        { get; set; } // oid
		[Column(SkipOnUpdate=true), Nullable] public string usename         { get; set; } // name
		[Column(SkipOnUpdate=true), Nullable] public object dirip           { get; set; } // inet
		[Column(SkipOnUpdate=true), Nullable] public string client_hostname { get; set; } // text
		[Column(SkipOnUpdate=true), Nullable] public int?   client_port     { get; set; } // integer
		[Column(SkipOnUpdate=true), Nullable] public bool?  waiting         { get; set; } // boolean
		[Column(SkipOnUpdate=true), Nullable] public string state           { get; set; } // text
		[Column(SkipOnUpdate=true), Nullable] public string query           { get; set; } // text
	}

	[Table(Schema="public", Name="usuarios")]
	public partial class usuario
	{
		[PrimaryKey,    NotNull ] public short     id            { get; set; } // smallint
		[Column,        Nullable] public int?      idpersona     { get; set; } // integer
		[Column,        Nullable] public string    descripcion   { get; set; } // character varying(40)
		[Column,        Nullable] public bool?     administrador { get; set; } // boolean
		[Column,        Nullable] public short?    diasvigencia  { get; set; } // smallint
		[Column,        Nullable] public DateTime? fechacambio   { get; set; } // date
		[Column,        Nullable] public string    loginusuario  { get; set; } // character varying(15)
		[Column,        Nullable] public string    clave         { get; set; } // character varying(32)
		[Column,        Nullable] public bool?     activo        { get; set; } // boolean
		[Column,        Nullable] public DateTime? fechacreacion { get; set; } // timestamp without time zone
		[Column,        Nullable] public bool?     multisesion   { get; set; } // boolean

		#region RELACIONES

		/// <summary>
		/// fk_usuarios_personas
		/// </summary>
		[Association(ThisKey="idpersona", OtherKey="id", CanBeNull=true)]
		public persona fkpersona { get; set; }

		public usuario Relacionar(persona fkpersona)
		{
			this.fkpersona = fkpersona;
			return this;
		}

		/// <summary>
		/// fk_ordenespedidos_usuarios1_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idusuarioanula", CanBeNull=false)]
		public IEnumerable<ordenpedido> fkordenespedidosusuarios1 { get; set; }

		/// <summary>
		/// fk_ordenespedidos_usuarios_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idusuarioregistra", CanBeNull=false)]
		public IEnumerable<ordenpedido> fkordenespedidos { get; set; }

		public usuario Relacionar(IEnumerable<ordenpedido> fkordenespedidos)
		{
			this.fkordenespedidos = fkordenespedidos;
			return this;
		}

		/// <summary>
		/// fk_pagos_usuarios_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idusuariocobranzas", CanBeNull=false)]
		public IEnumerable<pago> fkpagos { get; set; }

		public usuario Relacionar(IEnumerable<pago> fkpagos)
		{
			this.fkpagos = fkpagos;
			return this;
		}

		/// <summary>
		/// fk_usuariosperfiles_usuarios_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idusuario", CanBeNull=false)]
		public usuarioperfil fkusuariosperfile { get; set; }

		public usuario Relacionar(usuarioperfil fkusuariosperfile)
		{
			this.fkusuariosperfile = fkusuariosperfile;
			return this;
		}

		/// <summary>
		/// fk_usuariossesionactiva_usuarios_BackReference
		/// </summary>
		[Association(ThisKey="id", OtherKey="idusuario", CanBeNull=false)]
		public usuariosesionactiva fkusuariossesionactiva { get; set; }

		public usuario Relacionar(usuariosesionactiva fkusuariossesionactiva)
		{
			this.fkusuariossesionactiva = fkusuariossesionactiva;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="usuariosperfiles")]
	public partial class usuarioperfil
	{
		[PrimaryKey,    NotNull] public short idusuario { get; set; } // smallint
		[Column,        NotNull] public short idperfil  { get; set; } // smallint

		#region RELACIONES

		/// <summary>
		/// fk_usuariosperfiles_usuarios
		/// </summary>
		[Association(ThisKey="idusuario", OtherKey="id", CanBeNull=false)]
		public usuario fkusuario { get; set; }

		public usuarioperfil Relacionar(usuario fkusuario)
		{
			this.fkusuario = fkusuario;
			return this;
		}

		/// <summary>
		/// fk_usuariosperfiles_perfiles
		/// </summary>
		[Association(ThisKey="idperfil", OtherKey="id", CanBeNull=false)]
		public perfil fkperfile { get; set; }

		public usuarioperfil Relacionar(perfil fkperfile)
		{
			this.fkperfile = fkperfile;
			return this;
		}

		#endregion
	}

	[Table(Schema="public", Name="usuariossesionactiva")]
	public partial class usuariosesionactiva
	{
		[PrimaryKey,    NotNull ] public short     idusuario   { get; set; } // smallint
		[Column,        Nullable] public string    ipsesion    { get; set; } // character varying(120)
		[Column,        Nullable] public DateTime? fechasesion { get; set; } // timestamp (6) without time zone

		#region RELACIONES

		/// <summary>
		/// fk_usuariossesionactiva_usuarios
		/// </summary>
		[Association(ThisKey="idusuario", OtherKey="id", CanBeNull=false)]
		public usuario fkusuario { get; set; }

		public usuariosesionactiva Relacionar(usuario fkusuario)
		{
			this.fkusuario = fkusuario;
			return this;
		}

		#endregion
	}

	public static partial class tableExtensions
	{
		public static actividadeconomica Find(this ITable<actividadeconomica> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static banco Find(this ITable<banco> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static barrio Find(this ITable<barrio> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static canton Find(this ITable<canton> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static cliente Find(this ITable<cliente> table, int idpersona)
		{
			return table.FirstOrDefault(t =>
				t.idpersona == idpersona);
		}

		public static contable Find(this ITable<contable> table, short periodo)
		{
			return table.FirstOrDefault(t =>
				t.periodo == periodo);
		}

		public static contrato Find(this ITable<contrato> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static contribuyente Find(this ITable<contribuyente> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static conveniopago Find(this ITable<conveniopago> table, int identificadorpagos)
		{
			return table.FirstOrDefault(t =>
				t.identificadorpagos == identificadorpagos);
		}

		public static cuentabanco Find(this ITable<cuentabanco> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static cuentacontable Find(this ITable<cuentacontable> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static detallecontable Find(this ITable<detallecontable> table, short periodo)
		{
			return table.FirstOrDefault(t =>
				t.periodo == periodo);
		}

		public static detalleordenservicio Find(this ITable<detalleordenservicio> table, int idordenservicio)
		{
			return table.FirstOrDefault(t =>
				t.idordenservicio == idordenservicio);
		}

		public static detallesordenespedido Find(this ITable<detallesordenespedido> table, int idordenpedido)
		{
			return table.FirstOrDefault(t =>
				t.idordenpedido == idordenpedido);
		}

		public static documento Find(this ITable<documento> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static estadocivil Find(this ITable<estadocivil> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static estadoordenpedido Find(this ITable<estadoordenpedido> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static estadopersona Find(this ITable<estadopersona> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static formapago Find(this ITable<formapago> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static genero Find(this ITable<genero> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static identificadorpago Find(this ITable<identificadorpago> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static iteminventario Find(this ITable<iteminventario> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static menu Find(this ITable<menu> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static operadoratelefonia Find(this ITable<operadoratelefonia> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static ordenpedido Find(this ITable<ordenpedido> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static ordenservicio Find(this ITable<ordenservicio> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static pago Find(this ITable<pago> table, int identificadorpagos)
		{
			return table.FirstOrDefault(t =>
				t.identificadorpagos == identificadorpagos);
		}

		public static parametrogeneral Find(this ITable<parametrogeneral> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static parroquia Find(this ITable<parroquia> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static perfil Find(this ITable<perfil> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static perfilmenu Find(this ITable<perfilmenu> table, short idperfil)
		{
			return table.FirstOrDefault(t =>
				t.idperfil == idperfil);
		}

		public static periodo Find(this ITable<periodo> table, short anio)
		{
			return table.FirstOrDefault(t =>
				t.anio == anio);
		}

		public static persona Find(this ITable<persona> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static plan Find(this ITable<plan> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static producto Find(this ITable<producto> table, int id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static profesion Find(this ITable<profesion> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static provincia Find(this ITable<provincia> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static sectoreconomico Find(this ITable<sectoreconomico> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static tipocontable Find(this ITable<tipocontable> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static tipodocumento Find(this ITable<tipodocumento> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static tipopersona Find(this ITable<tipopersona> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static tipoplan Find(this ITable<tipoplan> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static tiposervicio Find(this ITable<tiposervicio> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static unidaddemedida Find(this ITable<unidaddemedida> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static usuario Find(this ITable<usuario> table, short id)
		{
			return table.FirstOrDefault(t =>
				t.id == id);
		}

		public static usuarioperfil Find(this ITable<usuarioperfil> table, short idusuario)
		{
			return table.FirstOrDefault(t =>
				t.idusuario == idusuario);
		}

		public static usuariosesionactiva Find(this ITable<usuariosesionactiva> table, short idusuario)
		{
			return table.FirstOrDefault(t =>
				t.idusuario == idusuario);
		}
	}
}
